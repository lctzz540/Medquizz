{"ast":null,"code":"var _jsxFileName = \"/Users/thangle/Documents/test/quiz-app/final/src/components/Quizz.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Score from './Score'; // import Timer from './Timer'\n//\n\nconst Quizz = props => {\n  const questions = props.questionList;\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [wrongAnswer, setWrongAnswer] = useState([]);\n  const [timeLeft, setTimeLeft] = useState(1);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    } else {\n      timer(timeLeft);\n      setWrongAnswer(wrongAnswer.concat([[questions[currentQuestion].questionText, questions[currentQuestion].answerOptions.find(element => element.isCorrect === true).answerText]]));\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const timer = timeLeft => {\n    if (timeLeft > 0) {\n      setTimeout(setTimeLeft(timeLeft - 1), 1000);\n    } else {\n      handleAnswerOptionClick(false);\n      setCurrentQuestion(currentQuestion + 1);\n    }\n  };\n\n  useEffect(() => {\n    timer(timeLeft);\n  }, [timeLeft]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quizz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, showScore ? /*#__PURE__*/React.createElement(Score, {\n    score: score,\n    numberOfQuestions: questions.length,\n    wrongAnswer: wrongAnswer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, answerOption.answerText)))));\n};\n\nexport default Quizz;","map":{"version":3,"sources":["/Users/thangle/Documents/test/quiz-app/final/src/components/Quizz.jsx"],"names":["React","useState","useEffect","Score","Quizz","props","questions","questionList","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","wrongAnswer","setWrongAnswer","timeLeft","setTimeLeft","handleAnswerOptionClick","isCorrect","timer","concat","questionText","answerOptions","find","element","answerText","nextQuestion","length","setTimeout","map","answerOption"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Score from './Score'\n// import Timer from './Timer'\n//\nconst Quizz = (props) => {\n  const questions = props.questionList\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n  const [showScore, setShowScore] = useState(false)\n  const [score, setScore] = useState(0)\n  const [wrongAnswer, setWrongAnswer] = useState([])\n  const [timeLeft, setTimeLeft] = useState(1)\n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1)\n    } else {\n      timer(timeLeft)\n      setWrongAnswer(\n        wrongAnswer.concat([\n          [\n            questions[currentQuestion].questionText,\n            questions[currentQuestion].answerOptions.find(\n              (element) => element.isCorrect === true\n            ).answerText,\n          ],\n        ])\n      )\n    }\n\n    const nextQuestion = currentQuestion + 1\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion)\n    } else {\n      setShowScore(true)\n    }\n  }\n  const timer = (timeLeft) => {\n    if (timeLeft > 0) {\n      setTimeout(setTimeLeft(timeLeft - 1), 1000)\n    } else {\n      handleAnswerOptionClick(false)\n      setCurrentQuestion(currentQuestion + 1)\n    }\n  }\n\n  useEffect(() => {\n    timer(timeLeft)\n  }, [timeLeft])\n\n  return (\n    <div className='quizz'>\n      {showScore ? (\n        <Score\n          score={score}\n          numberOfQuestions={questions.length}\n          wrongAnswer={wrongAnswer}\n        />\n      ) : (\n        <>\n          <div className='question-section'>\n            <div className='question-count'>\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\n            </div>\n            <div className='question-text'>\n              {questions[currentQuestion].questionText}\n            </div>\n          </div>\n          <div className='answer-section'>\n            {questions[currentQuestion].answerOptions.map((answerOption) => (\n              <button\n                onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}\n              >\n                {answerOption.answerText}\n              </button>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Quizz\n"]},"metadata":{},"sourceType":"module"}