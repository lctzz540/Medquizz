{"ast":null,"code":"var _jsxFileName = \"/Users/thangle/Documents/test/quiz-app/final/src/components/Quizz.jsx\";\nimport React, { useState } from 'react';\nimport Score from './Score.jsx';\n\nconst Quizz = props => {\n  const questions = props.questionList;\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [wrongAnswer, setWrongAnswer] = useState([]);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    } else {\n      setWrongAnswer(wrongAnswer.concat([[questions[currentQuestion].questionText, questions[currentQuestion].answerOptions.find(element => element.isCorrect === true).answerText]]));\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quizz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, showScore ? /*#__PURE__*/React.createElement(Score, {\n    score: score,\n    numberOfQuestions: questions.length,\n    wrongAnswer: wrongAnswer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }\n  }, questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 8\n    }\n  }, answerOption.answerText)))));\n};\n\nexport default Quizz;","map":{"version":3,"sources":["/Users/thangle/Documents/test/quiz-app/final/src/components/Quizz.jsx"],"names":["React","useState","Score","Quizz","props","questions","questionList","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","wrongAnswer","setWrongAnswer","handleAnswerOptionClick","isCorrect","concat","questionText","answerOptions","find","element","answerText","nextQuestion","length","map","answerOption"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAMC,SAAS,GAAGD,KAAK,CAACE,YAAxB;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,CAAD,CAAtD;AACD,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,CAAD,CAAlC;AACC,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;;AAGD,QAAMc,uBAAuB,GAAIC,SAAD,IAAe;AAC9C,QAAIA,SAAJ,EAAe;AACdJ,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACA,KAFD,MAEM;AACFG,MAAAA,cAAc,CAACD,WAAW,CAACI,MAAZ,CAAmB,CAAC,CAACZ,SAAS,CAACE,eAAD,CAAT,CAA2BW,YAA5B,EACjCb,SAAS,CAACE,eAAD,CAAT,CAA2BY,aAA3B,CAAyCC,IAAzC,CAA+CC,OAAD,IAAaA,OAAO,CAACL,SAAR,KAAsB,IAAjF,EAAuFM,UADtD,CAAD,CAAnB,CAAD,CAAd;AAID;;AAEH,UAAMC,YAAY,GAAGhB,eAAe,GAAG,CAAvC;;AACA,QAAIgB,YAAY,GAAGlB,SAAS,CAACmB,MAA7B,EAAqC;AACpChB,MAAAA,kBAAkB,CAACe,YAAD,CAAlB;AACA,KAFD,MAEO;AACNb,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACD,GAhBD;;AAiBC,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,SAAS,gBAAI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEE,KAAd;AAAqB,IAAA,iBAAiB,EAAEN,SAAS,CAACmB,MAAlD;AAA0D,IAAA,WAAW,EAAEX,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,gBACZ,uDACM;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJ;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBN,eAAe,GAAG,CAAlC,CADD,OAC8CF,SAAS,CAACmB,MADxD,CADI,eAIJ;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCnB,SAAS,CAACE,eAAD,CAAT,CAA2BW,YAA3D,CAJI,CADN,eAOC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEb,SAAS,CAACE,eAAD,CAAT,CAA2BY,aAA3B,CAAyCM,GAAzC,CAA8CC,YAAD,iBAC7C;AAAQ,IAAA,OAAO,EAAE,MAAMX,uBAAuB,CAACW,YAAY,CAACV,SAAd,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyEU,YAAY,CAACJ,UAAtF,CADA,CADF,CAPD,CAFA,CADF;AAoBD,CA7CD;;AA+CA,eAAenB,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport Score from './Score.jsx'\n\nconst Quizz = (props) => {\n  const questions = props.questionList\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n  const [wrongAnswer, setWrongAnswer] = useState([])\n\n\n\tconst handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}else {\n      setWrongAnswer(wrongAnswer.concat([[questions[currentQuestion].questionText,\n        questions[currentQuestion].answerOptions.find((element) => element.isCorrect === true).answerText]]\n      )\n      )\n    }\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n  return (\n    <div className='quizz'>\n      {showScore ? (<Score score={score} numberOfQuestions={questions.length} wrongAnswer={wrongAnswer}/>) : (\n\t\t\t\t<>\n          <div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\n    </div>\n  )\n}\n\nexport default Quizz\n"]},"metadata":{},"sourceType":"module"}