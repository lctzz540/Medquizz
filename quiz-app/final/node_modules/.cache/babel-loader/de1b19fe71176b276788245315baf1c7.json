{"ast":null,"code":"var _jsxFileName = \"/Users/thangle/Documents/test/quiz-app/final/src/App.js\";\nimport React, { useMemo, useState } from 'react';\nimport Quizz from './components/Quizz.jsx';\nimport { questions } from './data/questions.js';\nexport default function App() {\n  const [numberOfQuestions, setNumberOfQuestions] = useState();\n  const [clock, setClock] = useState();\n  const [questionList, setQuestionList] = useState();\n\n  const handleChange = e => {\n    setNumberOfQuestions(e.target.value);\n  };\n\n  const settime = numberOfQuestions === '30' ? 20 : numberOfQuestions === '60' ? 45 : 60;\n\n  const handleChangeSubject = e => e.target.value;\n\n  const _ = require('lodash');\n\n  const deepShuffle = arr => {\n    if (!arr || arr.length) {\n      return _.shuffle(arr).map(a => {\n        if (a.answerOptions) {\n          a.answerOptions = deepShuffle(a.answerOptions);\n        }\n\n        return a;\n      });\n    }\n\n    return arr;\n  };\n\n  useMemo(() => setQuestionList(questions.sort(() => Math.random() - 0.5).slice(0, numberOfQuestions).forEach(question => questions.answerOptions = question.answerOptions.sort(() => Math.random() - 0.5))), [numberOfQuestions]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quizz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, numberOfQuestions && settime && typeof clock !== 'undefined' ? /*#__PURE__*/React.createElement(Quizz, {\n    questionList: questionList,\n    time: settime * 60,\n    clock: clock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"MedQuizz\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"custom-select\",\n    onChange: handleChangeSubject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Choice Subject\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"Choice Subject\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Ph\\u01B0\\u01A1ng t\\u1EC5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"custom-select\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Choice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Choice\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"30\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"60\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"60\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"90\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"90\")), numberOfQuestions && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'inline-flex',\n      paddingTop: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setClock(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Time On\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setClock(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Time Off\")))));\n}","map":{"version":3,"sources":["/Users/thangle/Documents/test/quiz-app/final/src/App.js"],"names":["React","useMemo","useState","Quizz","questions","App","numberOfQuestions","setNumberOfQuestions","clock","setClock","questionList","setQuestionList","handleChange","e","target","value","settime","handleChangeSubject","_","require","deepShuffle","arr","length","shuffle","map","a","answerOptions","sort","Math","random","slice","forEach","question","display","paddingTop"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react'\nimport Quizz from './components/Quizz.jsx'\nimport { questions } from './data/questions.js'\n\nexport default function App() {\n  const [numberOfQuestions, setNumberOfQuestions] = useState()\n  const [clock, setClock] = useState()\n  const [questionList, setQuestionList] = useState()\n\n  const handleChange = (e) => {\n    setNumberOfQuestions(e.target.value)\n  }\n  const settime =\n    numberOfQuestions === '30' ? 20 : numberOfQuestions === '60' ? 45 : 60\n  const handleChangeSubject = (e) => e.target.value\n  const _ = require('lodash');\n  const deepShuffle = (arr) => {\n    if (!arr || arr.length) {\n      return _.shuffle(arr).map((a) => {\n        if (a.answerOptions) {\n          a.answerOptions = deepShuffle(a.answerOptions)\n        }\n        return a\n      })\n    }\n    return arr\n  }\n  useMemo(\n    () =>\n      setQuestionList(\n        questions\n          .sort(() => Math.random() - 0.5)\n          .slice(0, numberOfQuestions)\n          .forEach(\n            (question) =>\n              (questions.answerOptions = question.answerOptions.sort(\n                () => Math.random() - 0.5\n              ))\n          )\n      ),\n    [numberOfQuestions]\n  )\n  return (\n    <div className='quizz'>\n      {numberOfQuestions && settime && typeof clock !== 'undefined' ? (\n        <Quizz questionList={questionList} time={settime * 60} clock={clock} />\n      ) : (\n        <div className='score-section'>\n          <form>\n            <h3>MedQuizz</h3>\n            <select className='custom-select' onChange={handleChangeSubject}>\n              <option value='Choice Subject'>Choice Subject</option>\n              <option value='Phương tễ'></option>\n            </select>\n            <select className='custom-select' onChange={handleChange}>\n              <option value='Choice'>Choice</option>\n              <option value='30'>30</option>\n              <option value='60'>60</option>\n              <option value='90'>90</option>\n            </select>\n            {numberOfQuestions && (\n              <div\n                style={{\n                  display: 'inline-flex',\n                  paddingTop: '40px',\n                }}\n              >\n                <button onClick={() => setClock(true)}>Time On</button>\n                <button onClick={() => setClock(false)}>Time Off</button>\n              </div>\n            )}\n          </form>\n        </div>\n      )}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}