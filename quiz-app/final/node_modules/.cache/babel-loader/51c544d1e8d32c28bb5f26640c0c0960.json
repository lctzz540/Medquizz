{"ast":null,"code":"import _slicedToArray from\"/Users/thangle/Documents/test/quiz-app/final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Score from'./Score';import Timer from'./Timer';var Quizz=function Quizz(props){var questions=props.questionList;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentQuestion=_useState2[0],setCurrentQuestion=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showScore=_useState4[0],setShowScore=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),score=_useState6[0],setScore=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),wrongAnswer=_useState8[0],setWrongAnswer=_useState8[1];var _useState9=useState(props.time),_useState10=_slicedToArray(_useState9,2),timeLeft=_useState10[0],setTimeLeft=_useState10[1];var handleAnswerOptionClick=function handleAnswerOptionClick(isCorrect,Text){if(isCorrect){setScore(score+1);}else{setWrongAnswer(wrongAnswer.concat([[questions[currentQuestion].questionText,questions[currentQuestion].answerOptions.find(function(element){return element.isCorrect===true;}).answerText,Text]]));}var nextQuestion=currentQuestion+1;if(nextQuestion<questions.length){setCurrentQuestion(nextQuestion);}else{setShowScore(true);}};useEffect(function(){if(timeLeft>0&&props.clock){setTimeout(function(){return setTimeLeft(function(timeLeft){return timeLeft-1;});},1000);}else{if(props.clock)setShowScore(true);}},[timeLeft]);return/*#__PURE__*/React.createElement(\"div\",{className:\"quizz\"},showScore?/*#__PURE__*/React.createElement(Score,{score:score,numberOfQuestions:questions.length,wrongAnswer:wrongAnswer}):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"question-section\"},props.clock?/*#__PURE__*/React.createElement(Timer,{timeleft:timeLeft}):/*#__PURE__*/React.createElement(React.Fragment,null),/*#__PURE__*/React.createElement(\"div\",{className:\"question-count\"},/*#__PURE__*/React.createElement(\"span\",null,\"Question \",currentQuestion+1),\"/\",questions.length),/*#__PURE__*/React.createElement(\"div\",{className:\"question-text\"},questions[currentQuestion].questionText)),/*#__PURE__*/React.createElement(\"div\",{className:\"answer-section\"},questions[currentQuestion].answerOptions.map(function(answerOption){return/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return handleAnswerOptionClick(answerOption.isCorrect,answerOption.answerText);}},answerOption.answerText);}))));};export default Quizz;","map":{"version":3,"sources":["/Users/thangle/Documents/test/quiz-app/final/src/components/Quizz.jsx"],"names":["React","useState","useEffect","Score","Timer","Quizz","props","questions","questionList","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","wrongAnswer","setWrongAnswer","time","timeLeft","setTimeLeft","handleAnswerOptionClick","isCorrect","Text","concat","questionText","answerOptions","find","element","answerText","nextQuestion","length","clock","setTimeout","map","answerOption"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACvB,GAAMC,CAAAA,SAAS,CAAGD,KAAK,CAACE,YAAxB,CADuB,cAEuBP,QAAQ,CAAC,CAAD,CAF/B,wCAEhBQ,eAFgB,eAECC,kBAFD,8BAGWT,QAAQ,CAAC,KAAD,CAHnB,yCAGhBU,SAHgB,eAGLC,YAHK,8BAIGX,QAAQ,CAAC,CAAD,CAJX,yCAIhBY,KAJgB,eAITC,QAJS,8BAKeb,QAAQ,CAAC,EAAD,CALvB,yCAKhBc,WALgB,eAKHC,cALG,8BAMSf,QAAQ,CAACK,KAAK,CAACW,IAAP,CANjB,0CAMhBC,QANgB,gBAMNC,WANM,gBAQvB,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,SAAD,CAAYC,IAAZ,CAAqB,CACnD,GAAID,SAAJ,CAAe,CACbP,QAAQ,CAACD,KAAK,CAAG,CAAT,CAAR,CACD,CAFD,IAEO,CACLG,cAAc,CACZD,WAAW,CAACQ,MAAZ,CAAmB,CACjB,CACEhB,SAAS,CAACE,eAAD,CAAT,CAA2Be,YAD7B,CAEEjB,SAAS,CAACE,eAAD,CAAT,CAA2BgB,aAA3B,CAAyCC,IAAzC,CACE,SAACC,OAAD,QAAaA,CAAAA,OAAO,CAACN,SAAR,GAAsB,IAAnC,EADF,EAEEO,UAJJ,CAKEN,IALF,CADiB,CAAnB,CADY,CAAd,CAWD,CAED,GAAMO,CAAAA,YAAY,CAAGpB,eAAe,CAAG,CAAvC,CACA,GAAIoB,YAAY,CAAGtB,SAAS,CAACuB,MAA7B,CAAqC,CACnCpB,kBAAkB,CAACmB,YAAD,CAAlB,CACD,CAFD,IAEO,CACLjB,YAAY,CAAC,IAAD,CAAZ,CACD,CACF,CAvBD,CAyBAV,SAAS,CAAC,UAAM,CACd,GAAIgB,QAAQ,CAAG,CAAX,EAAgBZ,KAAK,CAACyB,KAA1B,CAAiC,CAC/BC,UAAU,CAAC,iBAAMb,CAAAA,WAAW,CAAC,SAACD,QAAD,QAAcA,CAAAA,QAAQ,CAAG,CAAzB,EAAD,CAAjB,EAAD,CAAgD,IAAhD,CAAV,CACD,CAFD,IAEO,CACL,GAAIZ,KAAK,CAACyB,KAAV,CAAiBnB,YAAY,CAAC,IAAD,CAAZ,CAClB,CACF,CANQ,CAMN,CAACM,QAAD,CANM,CAAT,CAQA,mBACE,2BAAK,SAAS,CAAC,OAAf,EACGP,SAAS,cACR,oBAAC,KAAD,EACE,KAAK,CAAEE,KADT,CAEE,iBAAiB,CAAEN,SAAS,CAACuB,MAF/B,CAGE,WAAW,CAAEf,WAHf,EADQ,cAOR,qDACE,2BAAK,SAAS,CAAC,kBAAf,EACGT,KAAK,CAACyB,KAAN,cAAc,oBAAC,KAAD,EAAO,QAAQ,CAAEb,QAAjB,EAAd,cAA8C,wCADjD,cAEE,2BAAK,SAAS,CAAC,gBAAf,eACE,4CAAgBT,eAAe,CAAG,CAAlC,CADF,KAC+CF,SAAS,CAACuB,MADzD,CAFF,cAKE,2BAAK,SAAS,CAAC,eAAf,EACGvB,SAAS,CAACE,eAAD,CAAT,CAA2Be,YAD9B,CALF,CADF,cAUE,2BAAK,SAAS,CAAC,gBAAf,EACGjB,SAAS,CAACE,eAAD,CAAT,CAA2BgB,aAA3B,CAAyCQ,GAAzC,CAA6C,SAACC,YAAD,qBAC5C,8BACE,OAAO,CAAE,yBACPd,CAAAA,uBAAuB,CACrBc,YAAY,CAACb,SADQ,CAErBa,YAAY,CAACN,UAFQ,CADhB,EADX,EAQGM,YAAY,CAACN,UARhB,CAD4C,EAA7C,CADH,CAVF,CARJ,CADF,CAqCD,CA9ED,CAgFA,cAAevB,CAAAA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Score from './Score'\nimport Timer from './Timer'\n\nconst Quizz = (props) => {\n  const questions = props.questionList\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n  const [showScore, setShowScore] = useState(false)\n  const [score, setScore] = useState(0)\n  const [wrongAnswer, setWrongAnswer] = useState([])\n  const [timeLeft, setTimeLeft] = useState(props.time)\n\n  const handleAnswerOptionClick = (isCorrect, Text) => {\n    if (isCorrect) {\n      setScore(score + 1)\n    } else {\n      setWrongAnswer(\n        wrongAnswer.concat([\n          [\n            questions[currentQuestion].questionText,\n            questions[currentQuestion].answerOptions.find(\n              (element) => element.isCorrect === true\n            ).answerText,\n            Text\n          ],\n        ])\n      )\n    }\n\n    const nextQuestion = currentQuestion + 1\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion)\n    } else {\n      setShowScore(true)\n    }\n  }\n\n  useEffect(() => {\n    if (timeLeft > 0 && props.clock) {\n      setTimeout(() => setTimeLeft((timeLeft) => timeLeft - 1), 1000)\n    } else {\n      if (props.clock) setShowScore(true)\n    }\n  }, [timeLeft])\n\n  return (\n    <div className='quizz'>\n      {showScore ? (\n        <Score\n          score={score}\n          numberOfQuestions={questions.length}\n          wrongAnswer={wrongAnswer}\n        />\n      ) : (\n        <>\n          <div className='question-section'>\n            {props.clock ? <Timer timeleft={timeLeft} /> : <></>}\n            <div className='question-count'>\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\n            </div>\n            <div className='question-text'>\n              {questions[currentQuestion].questionText}\n            </div>\n          </div>\n          <div className='answer-section'>\n            {questions[currentQuestion].answerOptions.map((answerOption) => (\n              <button\n                onClick={() =>\n                  handleAnswerOptionClick(\n                    answerOption.isCorrect,\n                    answerOption.answerText\n                  )\n                }\n              >\n                {answerOption.answerText}\n              </button>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Quizz\n"]},"metadata":{},"sourceType":"module"}