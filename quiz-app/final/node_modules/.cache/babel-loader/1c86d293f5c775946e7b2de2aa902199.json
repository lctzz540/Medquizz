{"ast":null,"code":"import _slicedToArray from\"/Users/thangle/Documents/test/quiz-app/final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Questions from'./data/questions.js';export default function App(){var questions=Questions();var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentQuestion=_useState2[0],setCurrentQuestion=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showScore=_useState4[0],setShowScore=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),score=_useState6[0],setScore=_useState6[1];var handleAnswerOptionClick=function handleAnswerOptionClick(isCorrect){if(isCorrect){setScore(score+1);}var nextQuestion=currentQuestion+1;if(nextQuestion<questions.length){setCurrentQuestion(nextQuestion);}else{setShowScore(true);}};return/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},showScore?/*#__PURE__*/React.createElement(\"div\",{className:\"score-section\"},\"You scored \",score,\" out of \",questions.length):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"question-section\"},/*#__PURE__*/React.createElement(\"div\",{className:\"question-count\"},/*#__PURE__*/React.createElement(\"span\",null,\"Question \",currentQuestion+1),\"/\",questions.length),/*#__PURE__*/React.createElement(\"div\",{className:\"question-text\"},questions[currentQuestion].questionText)),/*#__PURE__*/React.createElement(\"div\",{className:\"answer-section\"},questions[currentQuestion].answerOptions.map(function(answerOption){return/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return handleAnswerOptionClick(answerOption.isCorrect);}},answerOption.answerText);}))));}","map":{"version":3,"sources":["/Users/thangle/Documents/test/quiz-app/final/src/App.js"],"names":["React","useState","Questions","App","questions","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","handleAnswerOptionClick","isCorrect","nextQuestion","length","questionText","answerOptions","map","answerOption","answerText"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,SAAP,KAAsB,qBAAtB,CACA,cAAe,SAASC,CAAAA,GAAT,EAAe,CAC5B,GAAMC,CAAAA,SAAS,CAAGF,SAAS,EAA3B,CAD4B,cAEiBD,QAAQ,CAAC,CAAD,CAFzB,wCAEtBI,eAFsB,eAELC,kBAFK,8BAGKL,QAAQ,CAAC,KAAD,CAHb,yCAGtBM,SAHsB,eAGXC,YAHW,8BAIHP,QAAQ,CAAC,CAAD,CAJL,yCAItBQ,KAJsB,eAIfC,QAJe,eAM7B,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,SAAD,CAAe,CAC9C,GAAIA,SAAJ,CAAe,CACdF,QAAQ,CAACD,KAAK,CAAG,CAAT,CAAR,CACA,CAED,GAAMI,CAAAA,YAAY,CAAGR,eAAe,CAAG,CAAvC,CACA,GAAIQ,YAAY,CAAGT,SAAS,CAACU,MAA7B,CAAqC,CACpCR,kBAAkB,CAACO,YAAD,CAAlB,CACA,CAFD,IAEO,CACNL,YAAY,CAAC,IAAD,CAAZ,CACA,CACD,CAXD,CAYA,mBACC,2BAAK,SAAS,CAAC,KAAf,EACED,SAAS,cACT,2BAAK,SAAS,CAAC,eAAf,gBACaE,KADb,YAC4BL,SAAS,CAACU,MADtC,CADS,cAKT,qDACC,2BAAK,SAAS,CAAC,kBAAf,eACC,2BAAK,SAAS,CAAC,gBAAf,eACC,4CAAgBT,eAAe,CAAG,CAAlC,CADD,KAC8CD,SAAS,CAACU,MADxD,CADD,cAIC,2BAAK,SAAS,CAAC,eAAf,EAAgCV,SAAS,CAACC,eAAD,CAAT,CAA2BU,YAA3D,CAJD,CADD,cAOC,2BAAK,SAAS,CAAC,gBAAf,EACEX,SAAS,CAACC,eAAD,CAAT,CAA2BW,aAA3B,CAAyCC,GAAzC,CAA6C,SAACC,YAAD,qBAC7C,8BAAQ,OAAO,CAAE,yBAAMP,CAAAA,uBAAuB,CAACO,YAAY,CAACN,SAAd,CAA7B,EAAjB,EAAyEM,YAAY,CAACC,UAAtF,CAD6C,EAA7C,CADF,CAPD,CANF,CADD,CAuBA","sourcesContent":["import React, { useState } from 'react';\nimport Questions from './data/questions.js'\nexport default function App() {\n  const questions = Questions()\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\n\tconst handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n\treturn (\n\t\t<div className='app'>\n\t\t\t{showScore ? (\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tYou scored {score} out of {questions.length}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}