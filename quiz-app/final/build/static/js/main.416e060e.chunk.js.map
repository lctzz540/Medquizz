{"version":3,"sources":["components/Score.jsx","components/Timer.jsx","components/Quizz.jsx","data/questions.js","App.js","index.js"],"names":["Score","props","className","style","paddingBottom","score","numberOfQuestions","wrongAnswer","map","element","border","padding","margin","maxWidth","display","gridTemplateColumns","color","Timer","minutes","Math","floor","timeleft","seconds","minutesDigits","String","secondsDigits","fontWeight","Quizz","questions","questionList","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","setScore","setWrongAnswer","time","timeLeft","setTimeLeft","useEffect","clock","setTimeout","length","questionText","answerOptions","answerOption","onClick","isCorrect","Text","concat","find","answerText","nextQuestion","handleAnswerOptionClick","daicuong","giaibieu","taha","phuongthuocsonggiaibieuly","thanhnhiet","truphong","App","setNumberOfQuestions","setClock","setQuestionList","settime","_","require","useMemo","deepShuffle","arr","shuffle","a","sort","random","slice","onChange","e","target","value","paddingTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.416e060e.chunk.js","sourcesContent":["import React from 'react'\n\nconst Score = (props) => {\n  return (\n    <div>\n      <div className='score-section' style={{ paddingBottom: '50px' }}>\n        You scored {props.score} out of {props.numberOfQuestions}. Let's' check\n        your wrong answer below\n      </div>\n      {props.wrongAnswer.map((element) => (\n        <div\n          className='log-section'\n          style={{ border: '1px solid', padding: '10px', margin: '10px' }}\n        >\n          <div style={{ maxWidth: '100%' }}>{element[0]} : </div>\n          <div style={{ display: 'grid', gridTemplateColumns: '50% 50%' }}>\n            <div\n              style={{\n                color: 'red',\n                margin: '20px',\n              }}\n            >\n              Your choice: {element[2]}\n            </div>\n            <div\n              style={{\n                color: 'green',\n                margin: '20px',\n              }}\n            >\n              Correct answer is: {element[1]}\n            </div>\n          </div>\n          <br></br>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Score\n","import React from 'react'\n\nconst Timer = (props) => {\n  const minutes = Math.floor(props.timeleft / 60)\n  const seconds = props.timeleft % 60\n  const minutesDigits = minutes >= 10 ? String(minutes) : '0' + String(minutes)\n  const secondsDigits = seconds >= 10 ? String(seconds) : '0' + String(seconds)\n  return (\n    <div\n      style={{\n        fontWeight: 'bold',\n        display: 'inline-flex',\n      }}\n    >\n      <span style={{ color: 'red' }}>{minutesDigits}</span>\n      <span style={{ color: 'red' }}> :{secondsDigits}</span>\n    </div>\n  )\n}\n\nexport default Timer\n","import React, { useState, useEffect } from 'react'\nimport Score from './Score'\nimport Timer from './Timer'\n\nconst Quizz = (props) => {\n  const questions = props.questionList\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n  const [showScore, setShowScore] = useState(false)\n  const [score, setScore] = useState(0)\n  const [wrongAnswer, setWrongAnswer] = useState([])\n  const [timeLeft, setTimeLeft] = useState(props.time)\n\n  const handleAnswerOptionClick = (isCorrect, Text) => {\n    if (isCorrect) {\n      setScore(score + 1)\n    } else {\n      setWrongAnswer(\n        wrongAnswer.concat([\n          [\n            questions[currentQuestion].questionText,\n            questions[currentQuestion].answerOptions.find(\n              (element) => element.isCorrect === true\n            ).answerText,\n            Text\n          ],\n        ])\n      )\n    }\n\n    const nextQuestion = currentQuestion + 1\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion)\n    } else {\n      setShowScore(true)\n    }\n  }\n\n  useEffect(() => {\n    if (timeLeft > 0 && props.clock) {\n      setTimeout(() => setTimeLeft((timeLeft) => timeLeft - 1), 1000)\n    } else {\n      if (props.clock) setShowScore(true)\n    }\n  }, [timeLeft])\n\n  return (\n    <div className='quizz'>\n      {showScore ? (\n        <Score\n          score={score}\n          numberOfQuestions={questions.length}\n          wrongAnswer={wrongAnswer}\n        />\n      ) : (\n        <>\n          <div className='question-section'>\n            {props.clock ? <Timer timeleft={timeLeft} /> : <></>}\n            <div className='question-count'>\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\n            </div>\n            <div className='question-text'>\n              {questions[currentQuestion].questionText}\n            </div>\n          </div>\n          <div className='answer-section'>\n            {questions[currentQuestion].answerOptions.map((answerOption) => (\n              <button\n                onClick={() =>\n                  handleAnswerOptionClick(\n                    answerOption.isCorrect,\n                    answerOption.answerText\n                  )\n                }\n              >\n                {answerOption.answerText}\n              </button>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Quizz\n","import daicuong from './Đại cương.json'\nimport giaibieu from './Giải biểu.json'\nimport taha from './Tả hạ.json'\nimport phuongthuocsonggiaibieuly from './Phương-thuốc-song-giải-biểu-lý.json'\nimport thanhnhiet from './Thanh-nhiệt.json'\nimport truphong from './Trừ-phong.json'\n\nexport const questions = []\n  .concat(\n    daicuong,\n    giaibieu,\n    taha,\n    phuongthuocsonggiaibieuly,\n    thanhnhiet,\n    truphong\n  )\n","import React, { useMemo, useState } from 'react'\nimport Quizz from './components/Quizz.jsx'\nimport { questions } from './data/questions.js'\n\nexport default function App() {\n  const [numberOfQuestions, setNumberOfQuestions] = useState()\n  const [clock, setClock] = useState()\n  const [questionList, setQuestionList] = useState()\n\n  const handleChange = (e) => {\n    setNumberOfQuestions(e.target.value)\n  }\n  const settime =\n    numberOfQuestions === '30' ? 20 : numberOfQuestions === '60' ? 45 : 60\n  const handleChangeSubject = (e) => e.target.value\n  const _ = require('lodash')\n  const deepShuffle = (arr) => {\n    if (!arr || arr.length) {\n      return _.shuffle(arr).map((a) => {\n        if (a.answerOptions) {\n          a.answerOptions = deepShuffle(a.answerOptions)\n        }\n        return a\n      })\n    }\n    return arr\n  }\n  useMemo(\n    () =>\n      setQuestionList(\n        deepShuffle(questions\n          .sort(() => Math.random() - 0.5)\n          .slice(0, numberOfQuestions)\n          \n      )),\n    [numberOfQuestions]\n  )\n  return (\n    <div className='quizz'>\n      {numberOfQuestions && settime && typeof clock !== 'undefined' ? (\n        <Quizz questionList={questionList} time={settime * 60} clock={clock} />\n      ) : (\n        <div className='score-section'>\n          <form>\n            <h3>MedQuizz</h3>\n            <select className='custom-select' onChange={handleChangeSubject}>\n              <option value='Choice Subject'>Choice Subject</option>\n              <option value='Phương tễ'></option>\n            </select>\n            <select className='custom-select' onChange={handleChange}>\n              <option value='Choice'>Choice</option>\n              <option value='30'>30</option>\n              <option value='60'>60</option>\n              <option value='90'>90</option>\n            </select>\n            {numberOfQuestions && (\n              <div\n                style={{\n                  display: 'inline-flex',\n                  paddingTop: '40px',\n                }}\n              >\n                <button onClick={() => setClock(true)}>Time On</button>\n                <button onClick={() => setClock(false)}>Time Off</button>\n              </div>\n            )}\n          </form>\n        </div>\n      )}\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}